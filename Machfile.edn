o{mach/m2 [[aero "1.1.2"]
          [roll "0.0.7"]]

 mach/props [config (:deployment (aero.core/read-config "resources/config.edn" {:profile :prod}))
             version (roll.core/git-version)
             s3-artefact (str "ymir-" version "-standalone.jar")
             uberjar "target/ymir-app.jar"]

 ;; Useful AWS targets
 mach/import [["https://raw.githubusercontent.com/juxt/mach/master/extensions/aws.mach.edn"
               {aws-profile (:aws-profile config)}]]

 info (println "S3 Release Artefact:" s3-artefact)
 roll-info (clojure.pprint/pprint (roll.core/preprocess config))

 uberjar {product uberjar
          novelty (not (mach.core/file-exists? uberjar))
          update!  #$ ["boot uberjar"]}

 upload {depends [uberjar]
         update! (roll.core/upload! config uberjar s3-artefact version)}

 tfjson {product "deployment.tf.json"
         novelty (mach.core/modified-since product ["Machfile.edn" "resources/config.edn"])
         produce (-> config
                     (roll.core/preprocess)

                     ;; Bidi/Yada in Edge requires a host-name for the
                     ;; vhosts configuration as is best practice. In
                     ;; order to get Edge running/deployment into AWS
                     ;; without needing a pre-setup host-name, we set
                     ;; an environmental variable into the launch
                     ;; configuration that matches the DNS of the
                     ;; load-balancer DNS that is auto-assigned by
                     ;; AWS. Note that the recommended approach is to
                     ;; configure `:route-53-aliases` in the Roll
                     ;; config, which requires a route-53 zone-id you
                     ;; must manually configure.
                     (assoc-in [:services :ymir :launch-config :args :env-vars :ymir-host]
                               (roll.utils/$ [:aws-alb :ymir :dns-name]))

                     (roll.core/deployment->tf)
                     (roll.core/->tf-json))}}
